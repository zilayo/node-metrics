networks:
  eth-mainnet:
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - '127.0.0.1:9090:9090' # metrics
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheusdata
    volumes:
      - ${PWD}/prometheus/:/etc/prometheus/ # bind mount container's /etc/prometheus to ./prometheus
      - prometheus_data:/prometheusdata # volume mount prometheus data
    restart: unless-stopped
    networks:
      - eth-mainnet
    extra_hosts:
      - 'host.docker.internal:host-gateway'

  grafana:
    restart: unless-stopped
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    ports:
      - '127.0.0.1:3000:3000' # grafana frontend
    environment:
      PROMETHEUS_URL: http://prometheus:9090
    volumes:
      - grafana_data:/var/lib/grafana # volume mount grafana data
      - ./grafana/datasources:/etc/grafana/provisioning/datasources # bind mount datasources
      - ./grafana/dashboards:/etc/grafana/provisioning_temp/dashboards # bind mount to temp directory
    entrypoint: >
      sh -c "cp -r /etc/grafana/provisioning_temp/dashboards/. /etc/grafana/provisioning/dashboards &&
      find /etc/grafana/provisioning/dashboards/ -name '*.json' -exec sed -i 's/$${DS_PROMETHEUS}/Prometheus/g' {} \+ &&
      /run.sh"
    networks:
      - eth-mainnet
    extra_hosts:
      - 'host.docker.internal:host-gateway'

  eth-metrics-exporter:
    restart: unless-stopped
    image: ethpandaops/ethereum-metrics-exporter:latest
    ports:
      - '127.0.0.1:9050:9050' # metrics
    volumes:
      - ${PWD}/ethereum-metrics-config.yaml:/root/config.yaml
    command:
      - --config=/root/config.yaml
      - --metrics-port=9050
      - --execution-modules="eth,net,web3"
    networks:
      - eth-mainnet
    extra_hosts:
      - 'host.docker.internal:host-gateway'

volumes:
  prometheus_data:
  grafana_data:
